<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{7F37516E-A601-4A80-AF24-D0788679FA92}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>optix_project</RootNamespace>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
    <ProjectName>Volvox</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>$vs_platform_toolset$</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 8.0.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <LibraryPath>$(VC_LibraryPath_x64);$(WindowsSDK_LibraryPath_x64);$(NETFXKitsDir)Lib\um\x64;C:\ProgramData\NVIDIA Corporation\OptiX SDK 4.0.2\lib64;$(SolutionDir)assimp\lib64</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;_USE_MATH_DEFINES;NOMINMAX;GLUT_FOUND;GLUT_NO_LIB_PRAGMA;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\ProgramData\NVIDIA Corporation\OptiX SDK 4.0.2\SDK\include;C:\ProgramData\NVIDIA Corporation\OptiX SDK 4.0.2\SDK\include\optixu;C:\ProgramData\NVIDIA Corporation\OptiX SDK 4.0.2\SDK\sutil;$(CUDA_PATH)\include;C:\ProgramData\NVIDIA Corporation\OptiX SDK 4.0.2\include;$(SolutionDir);C:\ProgramData\NVIDIA Corporation\OptiX SDK 4.0.2\SDK\support\freeglut\include</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>C:\ProgramData\NVIDIA Corporation\OptiX SDK 4.0.2\SDK\support\freeglut\win64\Release\freeglut.lib;assimp.lib;C:\ProgramData\NVIDIA Corporation\OptiX SDK 4.0.2\lib64\optix.1.lib;C:\ProgramData\NVIDIA Corporation\OptiX SDK 4.0.2\lib64\optixu.1.lib;C:\ProgramData\NVIDIA Corporation\OptiX SDK 4.0.2\SDK\BUILD\lib\Debug\sutil_sdk.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories);$(SolutionDir)assimp\lib64;</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>echo Copying OptiX and CUDA DLLs to output folder..
xcopy /y "C:\ProgramData\NVIDIA Corporation\OptiX SDK 4.0.2\bin64\optix.1.dll" "$(OutDir)"
xcopy /y "C:\ProgramData\NVIDIA Corporation\OptiX SDK 4.0.2\bin64\optixu.1.dll" "$(OutDir)"
xcopy /y "C:\ProgramData\NVIDIA Corporation\OptiX SDK 4.0.2\bin64\cudart*.dll" "$(OutDir)"
xcopy /y "$(CudaToolkitBinDir)\cudart*.dll" "$(OutDir)"
echo Copying all PTX files from project directory to output directory..
xcopy /y "$(ProjectDir)PTX_files\*.*" "$(OutDir)PTX_files"</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>Copying OptiX and CUDA DLLs to output folder..</Message>
    </PostBuildEvent>
    <CudaCompile>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <AdditionalDeps>
      </AdditionalDeps>
      <Include>%(AdditionalDeps)</Include>
      <FastMath>true</FastMath>
      <AdditionalOptions>-D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --compiler-options /D_USE_MATH_DEFINES -DNVCC --disable-warnings %(AdditionalOptions)</AdditionalOptions>
      <NvccCompilation>ptx</NvccCompilation>
      <CudaRuntime>Shared</CudaRuntime>
      <CodeGeneration />
      <MaxRegCount />
    </CudaCompile>
    <PreBuildEvent>
      <Command>echo Creating directories "PTX_files" if they don't exist yet
if not exist "$(OutDir)PTX_files" mkdir "$(OutDir)PTX_files"
if not exist "$(ProjectDir)PTX_files" mkdir "$(ProjectDir)PTX_files"</Command>
      <Message>Creating output directories for PTX files</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$optix_sdk_dir_bs$\include;$optix_sdk_dir_bs$\include\optixu;$optix_sdk_dir_bs$\SDK\sutil;$cuda_toolkit_dir_bs$\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>$optix_sdk_dir_bs$\SDK\support\freeglut\win64\Release\freeglut.lib;$optix_sdk_dir_bs$\lib64\optix.1.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>echo Copying OptiX and CUDA DLLs to output folder..
xcopy /y "$optix_sdk_dir_bs$\bin64\optix.1.dll" "$(OutDir)"
xcopy /y "$optix_sdk_dir_bs$\bin64\optixu.1.dll" "$(OutDir)"
xcopy /y "$optix_sdk_dir_bs$\bin64\cudart*.dll" "$(OutDir)"
xcopy /y "$(CudaToolkitBinDir)\cudart*.dll" "$(OutDir)"
echo Copying all PTX files from project directory to output directory..
xcopy /y "$(ProjectDir)PTX_files\*.*" "$(OutDir)PTX_files"</Command>
      <Message>Copying OptiX and CUDA DLLs to output folder..</Message>
    </PostBuildEvent>
    <CudaCompile>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <Include>"$optix_sdk_dir_fs$/include";%(AdditionalDeps)</Include>
      <CudaRuntime>Shared</CudaRuntime>
      <NvccCompilation>ptx</NvccCompilation>
      <CodeGeneration />
      <MaxRegCount />
      <FastMath>true</FastMath>
      <AdditionalOptions>-D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --compiler-options /D_USE_MATH_DEFINES -DNVCC --disable-warnings %(AdditionalOptions)</AdditionalOptions>
    </CudaCompile>
    <PreBuildEvent>
      <Command>echo Creating directories "PTX_files" if they don't exist yet
if not exist "$(OutDir)PTX_files" mkdir "$(OutDir)PTX_files"
if not exist "$(ProjectDir)PTX_files" mkdir "$(ProjectDir)PTX_files"</Command>
      <Message>Creating output directories for PTX files</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <Text Include="ReadMe.txt" />
  </ItemGroup>
  <ItemGroup>
    <CudaCompile Include="CUDA_files\box.cu">
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$cuda_toolkit_dir_fs$/bin/nvcc.exe" "CUDA_files/box.cu" -ptx -o "PTX_files/box.cu.ptx" -ccbin "$vs_bin_path_fs$" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"$optix_sdk_dir_fs$/include"</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling box.cu into box.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">box.cu.ptx</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling box.cu into box.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">box.cu.ptx</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$cuda_toolkit_dir_fs$/bin/nvcc.exe" "CUDA_files/box.cu" -ptx -o "PTX_files/box.cu.ptx" -ccbin "$vs_bin_path_fs$" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"$optix_sdk_dir_fs$/include"</Command>
      <CompileOut Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)PTX_files\%(Filename)%(Extension).ptx</CompileOut>
      <Include Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </Include>
      <CodeGeneration Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </CodeGeneration>
      <GPUDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GPUDebugInfo>
      <MaxRegCount Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </MaxRegCount>
      <HostDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</HostDebugInfo>
      <NvccCompilation Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">ptx</NvccCompilation>
    </CudaCompile>
    <CudaCompile Include="CUDA_files\phong.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling phong.cu into phong.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">phong.cu.ptx</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$cuda_toolkit_dir_fs$/bin/nvcc.exe" "CUDA_files/phong.cu" -ptx -o "PTX_files/phong.cu.ptx" -ccbin "$vs_bin_path_fs$" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"$optix_sdk_dir_fs$/include" -include "phong.h" --disable-warnings</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </AdditionalInputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling phong.cu into phong.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">phong.cu.ptx</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$cuda_toolkit_dir_fs$/bin/nvcc.exe" "CUDA_files/phong.cu" -ptx -o "PTX_files/phong.cu.ptx" -ccbin "$vs_bin_path_fs$" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"$optix_sdk_dir_fs$/include" -include "phong.h" --disable-warnings</Command>
      <FileType>Document</FileType>
      <CompileOut Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)PTX_files\%(Filename)%(Extension).ptx</CompileOut>
      <Include Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </Include>
      <CodeGeneration Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </CodeGeneration>
      <GPUDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GPUDebugInfo>
      <MaxRegCount Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </MaxRegCount>
      <HostDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</HostDebugInfo>
      <NvccCompilation Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">ptx</NvccCompilation>
    </CudaCompile>
    <CudaCompile Include="CUDA_files\pinhole_camera.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling pinhole_camera.cu into pinhole_camera.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">pinhole_camera.cu.ptx</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$cuda_toolkit_dir_fs$/bin/nvcc.exe" "CUDA_files/pinhole_camera.cu" -ptx -o "PTX_files/pinhole_camera.cu.ptx" -ccbin "$vs_bin_path_fs$" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"$optix_sdk_dir_fs$/include" --disable-warnings</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling pinhole_camera.cu into pinhole_camera.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">pinhole_camera.cu.ptx</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$cuda_toolkit_dir_fs$/bin/nvcc.exe" "CUDA_files/pinhole_camera.cu" -ptx -o "PTX_files/pinhole_camera.cu.ptx" -ccbin "$vs_bin_path_fs$" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"$optix_sdk_dir_fs$/include" --disable-warnings</Command>
      <FileType>Document</FileType>
      <CompileOut Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)PTX_files\%(Filename)%(Extension).ptx</CompileOut>
      <HostDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</HostDebugInfo>
      <CodeGeneration Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </CodeGeneration>
      <Include Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </Include>
      <GPUDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GPUDebugInfo>
      <MaxRegCount Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </MaxRegCount>
      <CudaRuntime Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Static</CudaRuntime>
    </CudaCompile>
    <CudaCompile Include="CUDA_files\sphere.cu">
      <CompileOut Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)PTX_files\%(Filename)%(Extension).ptx</CompileOut>
      <NvccCompilation Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">ptx</NvccCompilation>
      <GPUDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GPUDebugInfo>
    </CudaCompile>
    <CudaCompile Include="CUDA_files\RenderFuncs.cu">
      <CompileOut Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)PTX_files\%(Filename)%(Extension).ptx</CompileOut>
      <GPUDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GPUDebugInfo>
    </CudaCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="commonStructs.h" />
    <ClInclude Include="CUDA_files\phong.h" />
    <ClInclude Include="modelLoader.h" />
    <ClInclude Include="optix_helpers.h" />
    <ClInclude Include="random.h" />
    <ClInclude Include="RenderFuncs.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="modelLoader.cpp" />
    <ClCompile Include="Volvox.cpp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 8.0.targets" />
  </ImportGroup>
</Project>